// <auto-generated />
using System;
using Infraestructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251017155436_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("Domain.Entities.CalendarioEntrega", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ContratoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DireccionEntrega")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("EsDiaNoEntrega")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("HorarioPreferido")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.ToTable("CalendariosEntrega");
                });

            modelBuilder.Entity("Domain.Entities.Contrato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PacienteId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PoliticaCambio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ServicioId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ServicioId");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("Domain.Entities.Servicio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Costo")
                        .HasColumnType("TEXT");

                    b.Property<int>("DuracionDias")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModalidadRevision")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("Domain.Entities.CalendarioEntrega", b =>
                {
                    b.HasOne("Domain.Entities.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("Domain.Entities.Contrato", b =>
                {
                    b.HasOne("Domain.Entities.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Servicio");
                });
#pragma warning restore 612, 618
        }
    }
}
